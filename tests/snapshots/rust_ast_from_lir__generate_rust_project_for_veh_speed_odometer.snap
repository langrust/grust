---
source: tests/rust_ast_from_lir.rs
expression: project
---
RustASTProject {
    directory: "",
    files: {
        "src/arabic_countires_over_speed_warning_alert.rs": File {
            shebang: None,
            attrs: [],
            items: [
                Item::Use {
                    attrs: [],
                    vis: Visibility::Inherited,
                    use_token: Use,
                    leading_colon: None,
                    tree: UseTree::Path(
                        UsePath {
                            ident: Ident(
                                crate,
                            ),
                            colon2_token: PathSep,
                            tree: UseTree::Path(
                                UsePath {
                                    ident: Ident(
                                        during_result,
                                    ),
                                    colon2_token: PathSep,
                                    tree: UseTree::Glob(
                                        UseGlob {
                                            star_token: Star,
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                    semi_token: Semi,
                },
                Item::Use {
                    attrs: [],
                    vis: Visibility::Inherited,
                    use_token: Use,
                    leading_colon: None,
                    tree: UseTree::Path(
                        UsePath {
                            ident: Ident(
                                crate,
                            ),
                            colon2_token: PathSep,
                            tree: UseTree::Path(
                                UsePath {
                                    ident: Ident(
                                        typedefs,
                                    ),
                                    colon2_token: PathSep,
                                    tree: UseTree::Name(
                                        UseName {
                                            ident: Ident(
                                                VehiculeSpeedLevel,
                                            ),
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                    semi_token: Semi,
                },
                Item::Struct {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    struct_token: Struct,
                    ident: Ident(
                        ArabicCountiresOverSpeedWarningAlertInput,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    fields: Fields::Named {
                        brace_token: Brace,
                        named: [
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        speed_kmh,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    i64,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        dt_ms,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    i64,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                        ],
                    },
                    semi_token: None,
                },
                Item::Struct {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    struct_token: Struct,
                    ident: Ident(
                        ArabicCountiresOverSpeedWarningAlertState,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    fields: Fields::Named {
                        brace_token: Brace,
                        named: [
                            Field {
                                attrs: [],
                                vis: Visibility::Inherited,
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        mem_prev_alert,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    VehiculeSpeedLevel,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Visibility::Inherited,
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        during_result,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    DuringResultState,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                        ],
                    },
                    semi_token: None,
                },
                Item::Impl {
                    attrs: [],
                    defaultness: None,
                    unsafety: None,
                    impl_token: Impl,
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    trait_: None,
                    self_ty: Type::Path {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        ArabicCountiresOverSpeedWarningAlertState,
                                    ),
                                    arguments: PathArguments::None,
                                },
                            ],
                        },
                    },
                    brace_token: Brace,
                    items: [
                        ImplItem::Fn {
                            attrs: [],
                            vis: Visibility::Public(
                                Pub,
                            ),
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    init,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [],
                                variadic: None,
                                output: ReturnType::Type(
                                    RArrow,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        ArabicCountiresOverSpeedWarningAlertState,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Expr(
                                        Expr::Struct {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            ArabicCountiresOverSpeedWarningAlertState,
                                                        ),
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            brace_token: Brace,
                                            fields: [
                                                FieldValue {
                                                    attrs: [],
                                                    member: Member::Named(
                                                        Ident(
                                                            mem_prev_alert,
                                                        ),
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        VehiculeSpeedLevel,
                                                                    ),
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        Level0,
                                                                    ),
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                Comma,
                                                FieldValue {
                                                    attrs: [],
                                                    member: Member::Named(
                                                        Ident(
                                                            during_result,
                                                        ),
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            DuringResultState,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            init,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                },
                                            ],
                                            dot2_token: None,
                                            rest: None,
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                        ImplItem::Fn {
                            attrs: [],
                            vis: Visibility::Public(
                                Pub,
                            ),
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    step,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    FnArg::Receiver(
                                        Receiver {
                                            attrs: [],
                                            reference: Some(
                                                (
                                                    And,
                                                    None,
                                                ),
                                            ),
                                            mutability: Some(
                                                Mut,
                                            ),
                                            self_token: SelfValue,
                                            colon_token: None,
                                            ty: Type::Reference {
                                                and_token: And,
                                                lifetime: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    Self,
                                                                ),
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                    ),
                                    Comma,
                                    FnArg::Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident(
                                                    input,
                                                ),
                                                subpat: None,
                                            },
                                            colon_token: Colon,
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                ArabicCountiresOverSpeedWarningAlertInput,
                                                            ),
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: ReturnType::Type(
                                    RArrow,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        VehiculeSpeedLevel,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                prev_alert,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        self,
                                                                    ),
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident(
                                                            mem_prev_alert,
                                                        ),
                                                    ),
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                x_1,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 3000i64,
                                                    },
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                x,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 120i64,
                                                        },
                                                    },
                                                    op: BinOp::Lt(
                                                        Lt,
                                                    ),
                                                    right: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            input,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident(
                                                                speed_kmh,
                                                            ),
                                                        ),
                                                    },
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                alert_on,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            self,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident(
                                                                during_result,
                                                            ),
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident(
                                                        step,
                                                    ),
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Struct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            DuringResultInput,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            brace_token: Brace,
                                                            fields: [
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            condition,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident(
                                                                                        x,
                                                                                    ),
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                Comma,
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            duration_ms,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident(
                                                                                        x_1,
                                                                                    ),
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                Comma,
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            dt_ms,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident(
                                                                                            input,
                                                                                        ),
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident(
                                                                                dt_ms,
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                            dot2_token: None,
                                                            rest: None,
                                                        },
                                                    ],
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                alert_off,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            input,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident(
                                                                speed_kmh,
                                                            ),
                                                        ),
                                                    },
                                                    op: BinOp::Le(
                                                        Le,
                                                    ),
                                                    right: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 118i64,
                                                        },
                                                    },
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                alert,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::Match {
                                                    attrs: [],
                                                    match_token: Match,
                                                    expr: Expr::Tuple {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        elems: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                alert_off,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                alert_on,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    brace_token: Brace,
                                                    arms: [
                                                        Arm {
                                                            attrs: [],
                                                            pat: Pat::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Pat::Wild {
                                                                        attrs: [],
                                                                        underscore_token: Underscore,
                                                                    },
                                                                    Comma,
                                                                    Pat::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Bool {
                                                                            value: true,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            guard: None,
                                                            fat_arrow_token: FatArrow,
                                                            body: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                VehiculeSpeedLevel,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                Level1,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            comma: Some(
                                                                Comma,
                                                            ),
                                                        },
                                                        Arm {
                                                            attrs: [],
                                                            pat: Pat::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Pat::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Bool {
                                                                            value: true,
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Pat::Wild {
                                                                        attrs: [],
                                                                        underscore_token: Underscore,
                                                                    },
                                                                ],
                                                            },
                                                            guard: None,
                                                            fat_arrow_token: FatArrow,
                                                            body: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                VehiculeSpeedLevel,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                Level0,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            comma: Some(
                                                                Comma,
                                                            ),
                                                        },
                                                        Arm {
                                                            attrs: [],
                                                            pat: Pat::Wild {
                                                                attrs: [],
                                                                underscore_token: Underscore,
                                                            },
                                                            guard: None,
                                                            fat_arrow_token: FatArrow,
                                                            body: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                prev_alert,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            comma: Some(
                                                                Comma,
                                                            ),
                                                        },
                                                    ],
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Expr(
                                        Expr::Assign {
                                            attrs: [],
                                            left: Expr::Field {
                                                attrs: [],
                                                base: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    self,
                                                                ),
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                member: Member::Named(
                                                    Ident(
                                                        mem_prev_alert,
                                                    ),
                                                ),
                                            },
                                            eq_token: Eq,
                                            right: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                alert,
                                                            ),
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        Some(
                                            Semi,
                                        ),
                                    ),
                                    Stmt::Expr(
                                        Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            alert,
                                                        ),
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                    ],
                },
            ],
        },
        "src/during_result.rs": File {
            shebang: None,
            attrs: [],
            items: [
                Item::Struct {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    struct_token: Struct,
                    ident: Ident(
                        DuringResultInput,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    fields: Fields::Named {
                        brace_token: Brace,
                        named: [
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        condition,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    bool,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        duration_ms,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    i64,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        dt_ms,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    i64,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                        ],
                    },
                    semi_token: None,
                },
                Item::Struct {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    struct_token: Struct,
                    ident: Ident(
                        DuringResultState,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    fields: Fields::Named {
                        brace_token: Brace,
                        named: [
                            Field {
                                attrs: [],
                                vis: Visibility::Inherited,
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        mem_prev_time_ms,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    i64,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                        ],
                    },
                    semi_token: None,
                },
                Item::Impl {
                    attrs: [],
                    defaultness: None,
                    unsafety: None,
                    impl_token: Impl,
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    trait_: None,
                    self_ty: Type::Path {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        DuringResultState,
                                    ),
                                    arguments: PathArguments::None,
                                },
                            ],
                        },
                    },
                    brace_token: Brace,
                    items: [
                        ImplItem::Fn {
                            attrs: [],
                            vis: Visibility::Public(
                                Pub,
                            ),
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    init,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [],
                                variadic: None,
                                output: ReturnType::Type(
                                    RArrow,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        DuringResultState,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Expr(
                                        Expr::Struct {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            DuringResultState,
                                                        ),
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            brace_token: Brace,
                                            fields: [
                                                FieldValue {
                                                    attrs: [],
                                                    member: Member::Named(
                                                        Ident(
                                                            mem_prev_time_ms,
                                                        ),
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    expr: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 0i64,
                                                        },
                                                    },
                                                },
                                            ],
                                            dot2_token: None,
                                            rest: None,
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                        ImplItem::Fn {
                            attrs: [],
                            vis: Visibility::Public(
                                Pub,
                            ),
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    step,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    FnArg::Receiver(
                                        Receiver {
                                            attrs: [],
                                            reference: Some(
                                                (
                                                    And,
                                                    None,
                                                ),
                                            ),
                                            mutability: Some(
                                                Mut,
                                            ),
                                            self_token: SelfValue,
                                            colon_token: None,
                                            ty: Type::Reference {
                                                and_token: And,
                                                lifetime: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    Self,
                                                                ),
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                    ),
                                    Comma,
                                    FnArg::Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident(
                                                    input,
                                                ),
                                                subpat: None,
                                            },
                                            colon_token: Colon,
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                DuringResultInput,
                                                            ),
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: ReturnType::Type(
                                    RArrow,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        bool,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                prev_time_ms,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        self,
                                                                    ),
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident(
                                                            mem_prev_time_ms,
                                                        ),
                                                    ),
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                time_ms,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::If {
                                                    attrs: [],
                                                    if_token: If,
                                                    cond: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            input,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident(
                                                                condition,
                                                            ),
                                                        ),
                                                    },
                                                    then_branch: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident(
                                                                                        prev_time_ms,
                                                                                    ),
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Add(
                                                                        Plus,
                                                                    ),
                                                                    right: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident(
                                                                                            input,
                                                                                        ),
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident(
                                                                                dt_ms,
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                    else_branch: Some(
                                                        (
                                                            Else,
                                                            Expr::Block {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 0i64,
                                                                                },
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ),
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                result,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        time_ms,
                                                                    ),
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    op: BinOp::Gt(
                                                        Gt,
                                                    ),
                                                    right: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            input,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident(
                                                                duration_ms,
                                                            ),
                                                        ),
                                                    },
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Expr(
                                        Expr::Assign {
                                            attrs: [],
                                            left: Expr::Field {
                                                attrs: [],
                                                base: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    self,
                                                                ),
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                member: Member::Named(
                                                    Ident(
                                                        mem_prev_time_ms,
                                                    ),
                                                ),
                                            },
                                            eq_token: Eq,
                                            right: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                time_ms,
                                                            ),
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        Some(
                                            Semi,
                                        ),
                                    ),
                                    Stmt::Expr(
                                        Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            result,
                                                        ),
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                    ],
                },
            ],
        },
        "src/functions.rs": File {
            shebang: None,
            attrs: [],
            items: [],
        },
        "src/india_over_speed_condition_speed_condition_holds.rs": File {
            shebang: None,
            attrs: [],
            items: [
                Item::Use {
                    attrs: [],
                    vis: Visibility::Inherited,
                    use_token: Use,
                    leading_colon: None,
                    tree: UseTree::Path(
                        UsePath {
                            ident: Ident(
                                crate,
                            ),
                            colon2_token: PathSep,
                            tree: UseTree::Path(
                                UsePath {
                                    ident: Ident(
                                        during_result,
                                    ),
                                    colon2_token: PathSep,
                                    tree: UseTree::Glob(
                                        UseGlob {
                                            star_token: Star,
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                    semi_token: Semi,
                },
                Item::Struct {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    struct_token: Struct,
                    ident: Ident(
                        IndiaOverSpeedConditionSpeedConditionHoldsInput,
                    ),
                    generics: Generics {
                        lt_token: Some(
                            Lt,
                        ),
                        params: [
                            GenericParam::Type(
                                TypeParam {
                                    attrs: [],
                                    ident: Ident(
                                        F,
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    bounds: [
                                        TypeParamBound::Trait(
                                            TraitBound {
                                                paren_token: None,
                                                modifier: TraitBoundModifier::None,
                                                lifetimes: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                Fn,
                                                            ),
                                                            arguments: PathArguments::Parenthesized {
                                                                paren_token: Paren,
                                                                inputs: [
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident(
                                                                                        i64,
                                                                                    ),
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                                output: ReturnType::Type(
                                                                    RArrow,
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident(
                                                                                        bool,
                                                                                    ),
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    ],
                                    eq_token: None,
                                    default: None,
                                },
                            ),
                        ],
                        gt_token: Some(
                            Gt,
                        ),
                        where_clause: None,
                    },
                    fields: Fields::Named {
                        brace_token: Brace,
                        named: [
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        condition,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    F,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        speed_kmh,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    i64,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        dt_ms,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    i64,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                        ],
                    },
                    semi_token: None,
                },
                Item::Struct {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    struct_token: Struct,
                    ident: Ident(
                        IndiaOverSpeedConditionSpeedConditionHoldsState,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    fields: Fields::Named {
                        brace_token: Brace,
                        named: [
                            Field {
                                attrs: [],
                                vis: Visibility::Inherited,
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        during_result,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    DuringResultState,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                        ],
                    },
                    semi_token: None,
                },
                Item::Impl {
                    attrs: [],
                    defaultness: None,
                    unsafety: None,
                    impl_token: Impl,
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    trait_: None,
                    self_ty: Type::Path {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        IndiaOverSpeedConditionSpeedConditionHoldsState,
                                    ),
                                    arguments: PathArguments::None,
                                },
                            ],
                        },
                    },
                    brace_token: Brace,
                    items: [
                        ImplItem::Fn {
                            attrs: [],
                            vis: Visibility::Public(
                                Pub,
                            ),
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    init,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [],
                                variadic: None,
                                output: ReturnType::Type(
                                    RArrow,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        IndiaOverSpeedConditionSpeedConditionHoldsState,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Expr(
                                        Expr::Struct {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            IndiaOverSpeedConditionSpeedConditionHoldsState,
                                                        ),
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            brace_token: Brace,
                                            fields: [
                                                FieldValue {
                                                    attrs: [],
                                                    member: Member::Named(
                                                        Ident(
                                                            during_result,
                                                        ),
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            DuringResultState,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            init,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                },
                                            ],
                                            dot2_token: None,
                                            rest: None,
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                        ImplItem::Fn {
                            attrs: [],
                            vis: Visibility::Public(
                                Pub,
                            ),
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    step,
                                ),
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident(
                                                    F,
                                                ),
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            Fn,
                                                                        ),
                                                                        arguments: PathArguments::Parenthesized {
                                                                            paren_token: Paren,
                                                                            inputs: [
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident(
                                                                                                    i64,
                                                                                                ),
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                            output: ReturnType::Type(
                                                                                RArrow,
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident(
                                                                                                    bool,
                                                                                                ),
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    FnArg::Receiver(
                                        Receiver {
                                            attrs: [],
                                            reference: Some(
                                                (
                                                    And,
                                                    None,
                                                ),
                                            ),
                                            mutability: Some(
                                                Mut,
                                            ),
                                            self_token: SelfValue,
                                            colon_token: None,
                                            ty: Type::Reference {
                                                and_token: And,
                                                lifetime: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    Self,
                                                                ),
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                    ),
                                    Comma,
                                    FnArg::Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident(
                                                    input,
                                                ),
                                                subpat: None,
                                            },
                                            colon_token: Colon,
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                IndiaOverSpeedConditionSpeedConditionHoldsInput,
                                                            ),
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Type(
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident(
                                                                                            F,
                                                                                        ),
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: ReturnType::Type(
                                    RArrow,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        bool,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                x,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 1000i64,
                                                    },
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                speed_condition,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Paren {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        expr: Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                input,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident(
                                                                    condition,
                                                                ),
                                                            ),
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                input,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident(
                                                                    speed_kmh,
                                                                ),
                                                            ),
                                                        },
                                                    ],
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                speed_condition_holds,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            self,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident(
                                                                during_result,
                                                            ),
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident(
                                                        step,
                                                    ),
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Struct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            DuringResultInput,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            brace_token: Brace,
                                                            fields: [
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            condition,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident(
                                                                                        speed_condition,
                                                                                    ),
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                Comma,
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            duration_ms,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident(
                                                                                        x,
                                                                                    ),
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                Comma,
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            dt_ms,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident(
                                                                                            input,
                                                                                        ),
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident(
                                                                                dt_ms,
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                            dot2_token: None,
                                                            rest: None,
                                                        },
                                                    ],
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Expr(
                                        Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            speed_condition_holds,
                                                        ),
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                    ],
                },
            ],
        },
        "src/india_over_speed_high_speed_conditions_speed_condition.rs": File {
            shebang: None,
            attrs: [],
            items: [
                Item::Use {
                    attrs: [],
                    vis: Visibility::Inherited,
                    use_token: Use,
                    leading_colon: None,
                    tree: UseTree::Path(
                        UsePath {
                            ident: Ident(
                                crate,
                            ),
                            colon2_token: PathSep,
                            tree: UseTree::Path(
                                UsePath {
                                    ident: Ident(
                                        india_over_speed_condition_speed_condition_holds,
                                    ),
                                    colon2_token: PathSep,
                                    tree: UseTree::Glob(
                                        UseGlob {
                                            star_token: Star,
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                    semi_token: Semi,
                },
                Item::Struct {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    struct_token: Struct,
                    ident: Ident(
                        IndiaOverSpeedHighSpeedConditionsSpeedConditionInput,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    fields: Fields::Named {
                        brace_token: Brace,
                        named: [
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        speed_kmh,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    i64,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        dt_ms,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    i64,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                        ],
                    },
                    semi_token: None,
                },
                Item::Struct {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    struct_token: Struct,
                    ident: Ident(
                        IndiaOverSpeedHighSpeedConditionsSpeedConditionState,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    fields: Fields::Named {
                        brace_token: Brace,
                        named: [
                            Field {
                                attrs: [],
                                vis: Visibility::Inherited,
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        india_over_speed_condition_speed_condition_holds,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    IndiaOverSpeedConditionSpeedConditionHoldsState,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                        ],
                    },
                    semi_token: None,
                },
                Item::Impl {
                    attrs: [],
                    defaultness: None,
                    unsafety: None,
                    impl_token: Impl,
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    trait_: None,
                    self_ty: Type::Path {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        IndiaOverSpeedHighSpeedConditionsSpeedConditionState,
                                    ),
                                    arguments: PathArguments::None,
                                },
                            ],
                        },
                    },
                    brace_token: Brace,
                    items: [
                        ImplItem::Fn {
                            attrs: [],
                            vis: Visibility::Public(
                                Pub,
                            ),
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    init,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [],
                                variadic: None,
                                output: ReturnType::Type(
                                    RArrow,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        IndiaOverSpeedHighSpeedConditionsSpeedConditionState,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Expr(
                                        Expr::Struct {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            IndiaOverSpeedHighSpeedConditionsSpeedConditionState,
                                                        ),
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            brace_token: Brace,
                                            fields: [
                                                FieldValue {
                                                    attrs: [],
                                                    member: Member::Named(
                                                        Ident(
                                                            india_over_speed_condition_speed_condition_holds,
                                                        ),
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            IndiaOverSpeedConditionSpeedConditionHoldsState,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            init,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                },
                                            ],
                                            dot2_token: None,
                                            rest: None,
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                        ImplItem::Fn {
                            attrs: [],
                            vis: Visibility::Public(
                                Pub,
                            ),
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    step,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    FnArg::Receiver(
                                        Receiver {
                                            attrs: [],
                                            reference: Some(
                                                (
                                                    And,
                                                    None,
                                                ),
                                            ),
                                            mutability: Some(
                                                Mut,
                                            ),
                                            self_token: SelfValue,
                                            colon_token: None,
                                            ty: Type::Reference {
                                                and_token: And,
                                                lifetime: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    Self,
                                                                ),
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                    ),
                                    Comma,
                                    FnArg::Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident(
                                                    input,
                                                ),
                                                subpat: None,
                                            },
                                            colon_token: Colon,
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                IndiaOverSpeedHighSpeedConditionsSpeedConditionInput,
                                                            ),
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: ReturnType::Type(
                                    RArrow,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        bool,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                x,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::Closure {
                                                    attrs: [],
                                                    lifetimes: None,
                                                    constness: None,
                                                    movability: None,
                                                    asyncness: None,
                                                    capture: Some(
                                                        Move,
                                                    ),
                                                    or1_token: Or,
                                                    inputs: [
                                                        Pat::Type {
                                                            attrs: [],
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident(
                                                                    s,
                                                                ),
                                                                subpat: None,
                                                            },
                                                            colon_token: Colon,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                i64,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                    or2_token: Or,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            bool,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                    body: Expr::Block {
                                                        attrs: [],
                                                        label: None,
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 120i64,
                                                                            },
                                                                        },
                                                                        op: BinOp::Lt(
                                                                            Lt,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident(
                                                                                            s,
                                                                                        ),
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                speed_condition,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            self,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident(
                                                                india_over_speed_condition_speed_condition_holds,
                                                            ),
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident(
                                                        step,
                                                    ),
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Struct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            IndiaOverSpeedConditionSpeedConditionHoldsInput,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            brace_token: Brace,
                                                            fields: [
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            condition,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident(
                                                                                        x,
                                                                                    ),
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                Comma,
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            speed_kmh,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident(
                                                                                            input,
                                                                                        ),
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident(
                                                                                speed_kmh,
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                                Comma,
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            dt_ms,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident(
                                                                                            input,
                                                                                        ),
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident(
                                                                                dt_ms,
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                            dot2_token: None,
                                                            rest: None,
                                                        },
                                                    ],
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Expr(
                                        Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            speed_condition,
                                                        ),
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                    ],
                },
            ],
        },
        "src/india_over_speed_low_speed_conditions_speed_condition.rs": File {
            shebang: None,
            attrs: [],
            items: [
                Item::Use {
                    attrs: [],
                    vis: Visibility::Inherited,
                    use_token: Use,
                    leading_colon: None,
                    tree: UseTree::Path(
                        UsePath {
                            ident: Ident(
                                crate,
                            ),
                            colon2_token: PathSep,
                            tree: UseTree::Path(
                                UsePath {
                                    ident: Ident(
                                        typedefs,
                                    ),
                                    colon2_token: PathSep,
                                    tree: UseTree::Name(
                                        UseName {
                                            ident: Ident(
                                                VehiculeSpeedLevel,
                                            ),
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                    semi_token: Semi,
                },
                Item::Use {
                    attrs: [],
                    vis: Visibility::Inherited,
                    use_token: Use,
                    leading_colon: None,
                    tree: UseTree::Path(
                        UsePath {
                            ident: Ident(
                                crate,
                            ),
                            colon2_token: PathSep,
                            tree: UseTree::Path(
                                UsePath {
                                    ident: Ident(
                                        india_over_speed_condition_speed_condition_holds,
                                    ),
                                    colon2_token: PathSep,
                                    tree: UseTree::Glob(
                                        UseGlob {
                                            star_token: Star,
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                    semi_token: Semi,
                },
                Item::Struct {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    struct_token: Struct,
                    ident: Ident(
                        IndiaOverSpeedLowSpeedConditionsSpeedConditionInput,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    fields: Fields::Named {
                        brace_token: Brace,
                        named: [
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        speed_kmh,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    i64,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        prev_alert,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    VehiculeSpeedLevel,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        dt_ms,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    i64,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                        ],
                    },
                    semi_token: None,
                },
                Item::Struct {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    struct_token: Struct,
                    ident: Ident(
                        IndiaOverSpeedLowSpeedConditionsSpeedConditionState,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    fields: Fields::Named {
                        brace_token: Brace,
                        named: [
                            Field {
                                attrs: [],
                                vis: Visibility::Inherited,
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        india_over_speed_condition_speed_condition_holds,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    IndiaOverSpeedConditionSpeedConditionHoldsState,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                        ],
                    },
                    semi_token: None,
                },
                Item::Impl {
                    attrs: [],
                    defaultness: None,
                    unsafety: None,
                    impl_token: Impl,
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    trait_: None,
                    self_ty: Type::Path {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        IndiaOverSpeedLowSpeedConditionsSpeedConditionState,
                                    ),
                                    arguments: PathArguments::None,
                                },
                            ],
                        },
                    },
                    brace_token: Brace,
                    items: [
                        ImplItem::Fn {
                            attrs: [],
                            vis: Visibility::Public(
                                Pub,
                            ),
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    init,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [],
                                variadic: None,
                                output: ReturnType::Type(
                                    RArrow,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        IndiaOverSpeedLowSpeedConditionsSpeedConditionState,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Expr(
                                        Expr::Struct {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            IndiaOverSpeedLowSpeedConditionsSpeedConditionState,
                                                        ),
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            brace_token: Brace,
                                            fields: [
                                                FieldValue {
                                                    attrs: [],
                                                    member: Member::Named(
                                                        Ident(
                                                            india_over_speed_condition_speed_condition_holds,
                                                        ),
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            IndiaOverSpeedConditionSpeedConditionHoldsState,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            init,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                },
                                            ],
                                            dot2_token: None,
                                            rest: None,
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                        ImplItem::Fn {
                            attrs: [],
                            vis: Visibility::Public(
                                Pub,
                            ),
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    step,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    FnArg::Receiver(
                                        Receiver {
                                            attrs: [],
                                            reference: Some(
                                                (
                                                    And,
                                                    None,
                                                ),
                                            ),
                                            mutability: Some(
                                                Mut,
                                            ),
                                            self_token: SelfValue,
                                            colon_token: None,
                                            ty: Type::Reference {
                                                and_token: And,
                                                lifetime: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    Self,
                                                                ),
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                    ),
                                    Comma,
                                    FnArg::Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident(
                                                    input,
                                                ),
                                                subpat: None,
                                            },
                                            colon_token: Colon,
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                IndiaOverSpeedLowSpeedConditionsSpeedConditionInput,
                                                            ),
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: ReturnType::Type(
                                    RArrow,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        bool,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                speed_condition_2,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                input,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident(
                                                                    prev_alert,
                                                                ),
                                                            ),
                                                        },
                                                        op: BinOp::Eq(
                                                            EqEq,
                                                        ),
                                                        right: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            VehiculeSpeedLevel,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            Level3,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    op: BinOp::And(
                                                        AndAnd,
                                                    ),
                                                    right: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                input,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident(
                                                                    speed_kmh,
                                                                ),
                                                            ),
                                                        },
                                                        op: BinOp::Le(
                                                            Le,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 118i64,
                                                            },
                                                        },
                                                    },
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                x,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::Closure {
                                                    attrs: [],
                                                    lifetimes: None,
                                                    constness: None,
                                                    movability: None,
                                                    asyncness: None,
                                                    capture: Some(
                                                        Move,
                                                    ),
                                                    or1_token: Or,
                                                    inputs: [
                                                        Pat::Type {
                                                            attrs: [],
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident(
                                                                    s,
                                                                ),
                                                                subpat: None,
                                                            },
                                                            colon_token: Colon,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                i64,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                    or2_token: Or,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            bool,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                    body: Expr::Block {
                                                        attrs: [],
                                                        label: None,
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 80i64,
                                                                                },
                                                                            },
                                                                            op: BinOp::Lt(
                                                                                Lt,
                                                                            ),
                                                                            right: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                s,
                                                                                            ),
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::And(
                                                                            AndAnd,
                                                                        ),
                                                                        right: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                s,
                                                                                            ),
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Le(
                                                                                Le,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 120i64,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                speed_condition_1,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            self,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident(
                                                                india_over_speed_condition_speed_condition_holds,
                                                            ),
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident(
                                                        step,
                                                    ),
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Struct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            IndiaOverSpeedConditionSpeedConditionHoldsInput,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            brace_token: Brace,
                                                            fields: [
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            condition,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident(
                                                                                        x,
                                                                                    ),
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                Comma,
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            speed_kmh,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident(
                                                                                            input,
                                                                                        ),
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident(
                                                                                speed_kmh,
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                                Comma,
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            dt_ms,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident(
                                                                                            input,
                                                                                        ),
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident(
                                                                                dt_ms,
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                            dot2_token: None,
                                                            rest: None,
                                                        },
                                                    ],
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                speed_condition,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        speed_condition_1,
                                                                    ),
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    op: BinOp::Or(
                                                        OrOr,
                                                    ),
                                                    right: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        speed_condition_2,
                                                                    ),
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Expr(
                                        Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            speed_condition,
                                                        ),
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                    ],
                },
            ],
        },
        "src/india_over_speed_no_alert_conditions_speed_condition.rs": File {
            shebang: None,
            attrs: [],
            items: [
                Item::Struct {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    struct_token: Struct,
                    ident: Ident(
                        IndiaOverSpeedNoAlertConditionsSpeedConditionInput,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    fields: Fields::Named {
                        brace_token: Brace,
                        named: [
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        speed_kmh,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    i64,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                        ],
                    },
                    semi_token: None,
                },
                Item::Struct {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    struct_token: Struct,
                    ident: Ident(
                        IndiaOverSpeedNoAlertConditionsSpeedConditionState,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    fields: Fields::Named {
                        brace_token: Brace,
                        named: [],
                    },
                    semi_token: None,
                },
                Item::Impl {
                    attrs: [],
                    defaultness: None,
                    unsafety: None,
                    impl_token: Impl,
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    trait_: None,
                    self_ty: Type::Path {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        IndiaOverSpeedNoAlertConditionsSpeedConditionState,
                                    ),
                                    arguments: PathArguments::None,
                                },
                            ],
                        },
                    },
                    brace_token: Brace,
                    items: [
                        ImplItem::Fn {
                            attrs: [],
                            vis: Visibility::Public(
                                Pub,
                            ),
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    init,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [],
                                variadic: None,
                                output: ReturnType::Type(
                                    RArrow,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        IndiaOverSpeedNoAlertConditionsSpeedConditionState,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Expr(
                                        Expr::Struct {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            IndiaOverSpeedNoAlertConditionsSpeedConditionState,
                                                        ),
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            brace_token: Brace,
                                            fields: [],
                                            dot2_token: None,
                                            rest: None,
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                        ImplItem::Fn {
                            attrs: [],
                            vis: Visibility::Public(
                                Pub,
                            ),
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    step,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    FnArg::Receiver(
                                        Receiver {
                                            attrs: [],
                                            reference: Some(
                                                (
                                                    And,
                                                    None,
                                                ),
                                            ),
                                            mutability: Some(
                                                Mut,
                                            ),
                                            self_token: SelfValue,
                                            colon_token: None,
                                            ty: Type::Reference {
                                                and_token: And,
                                                lifetime: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    Self,
                                                                ),
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                    ),
                                    Comma,
                                    FnArg::Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident(
                                                    input,
                                                ),
                                                subpat: None,
                                            },
                                            colon_token: Colon,
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                IndiaOverSpeedNoAlertConditionsSpeedConditionInput,
                                                            ),
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: ReturnType::Type(
                                    RArrow,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        bool,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                speed_condition,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            input,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident(
                                                                speed_kmh,
                                                            ),
                                                        ),
                                                    },
                                                    op: BinOp::Le(
                                                        Le,
                                                    ),
                                                    right: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 78i64,
                                                        },
                                                    },
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Expr(
                                        Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            speed_condition,
                                                        ),
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                    ],
                },
            ],
        },
        "src/india_over_speed_warning_alert.rs": File {
            shebang: None,
            attrs: [],
            items: [
                Item::Use {
                    attrs: [],
                    vis: Visibility::Inherited,
                    use_token: Use,
                    leading_colon: None,
                    tree: UseTree::Path(
                        UsePath {
                            ident: Ident(
                                crate,
                            ),
                            colon2_token: PathSep,
                            tree: UseTree::Path(
                                UsePath {
                                    ident: Ident(
                                        india_over_speed_no_alert_conditions_speed_condition,
                                    ),
                                    colon2_token: PathSep,
                                    tree: UseTree::Glob(
                                        UseGlob {
                                            star_token: Star,
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                    semi_token: Semi,
                },
                Item::Use {
                    attrs: [],
                    vis: Visibility::Inherited,
                    use_token: Use,
                    leading_colon: None,
                    tree: UseTree::Path(
                        UsePath {
                            ident: Ident(
                                crate,
                            ),
                            colon2_token: PathSep,
                            tree: UseTree::Path(
                                UsePath {
                                    ident: Ident(
                                        india_over_speed_low_speed_conditions_speed_condition,
                                    ),
                                    colon2_token: PathSep,
                                    tree: UseTree::Glob(
                                        UseGlob {
                                            star_token: Star,
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                    semi_token: Semi,
                },
                Item::Use {
                    attrs: [],
                    vis: Visibility::Inherited,
                    use_token: Use,
                    leading_colon: None,
                    tree: UseTree::Path(
                        UsePath {
                            ident: Ident(
                                crate,
                            ),
                            colon2_token: PathSep,
                            tree: UseTree::Path(
                                UsePath {
                                    ident: Ident(
                                        india_over_speed_high_speed_conditions_speed_condition,
                                    ),
                                    colon2_token: PathSep,
                                    tree: UseTree::Glob(
                                        UseGlob {
                                            star_token: Star,
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                    semi_token: Semi,
                },
                Item::Use {
                    attrs: [],
                    vis: Visibility::Inherited,
                    use_token: Use,
                    leading_colon: None,
                    tree: UseTree::Path(
                        UsePath {
                            ident: Ident(
                                crate,
                            ),
                            colon2_token: PathSep,
                            tree: UseTree::Path(
                                UsePath {
                                    ident: Ident(
                                        typedefs,
                                    ),
                                    colon2_token: PathSep,
                                    tree: UseTree::Name(
                                        UseName {
                                            ident: Ident(
                                                VehiculeSpeedLevel,
                                            ),
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                    semi_token: Semi,
                },
                Item::Struct {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    struct_token: Struct,
                    ident: Ident(
                        IndiaOverSpeedWarningAlertInput,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    fields: Fields::Named {
                        brace_token: Brace,
                        named: [
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        speed_kmh,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    i64,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        dt_ms,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    i64,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                        ],
                    },
                    semi_token: None,
                },
                Item::Struct {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    struct_token: Struct,
                    ident: Ident(
                        IndiaOverSpeedWarningAlertState,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    fields: Fields::Named {
                        brace_token: Brace,
                        named: [
                            Field {
                                attrs: [],
                                vis: Visibility::Inherited,
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        mem_prev_alert,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    VehiculeSpeedLevel,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Visibility::Inherited,
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        india_over_speed_no_alert_conditions_speed_condition,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    IndiaOverSpeedNoAlertConditionsSpeedConditionState,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Visibility::Inherited,
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        india_over_speed_low_speed_conditions_speed_condition,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    IndiaOverSpeedLowSpeedConditionsSpeedConditionState,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Visibility::Inherited,
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        india_over_speed_high_speed_conditions_speed_condition,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    IndiaOverSpeedHighSpeedConditionsSpeedConditionState,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                        ],
                    },
                    semi_token: None,
                },
                Item::Impl {
                    attrs: [],
                    defaultness: None,
                    unsafety: None,
                    impl_token: Impl,
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    trait_: None,
                    self_ty: Type::Path {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        IndiaOverSpeedWarningAlertState,
                                    ),
                                    arguments: PathArguments::None,
                                },
                            ],
                        },
                    },
                    brace_token: Brace,
                    items: [
                        ImplItem::Fn {
                            attrs: [],
                            vis: Visibility::Public(
                                Pub,
                            ),
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    init,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [],
                                variadic: None,
                                output: ReturnType::Type(
                                    RArrow,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        IndiaOverSpeedWarningAlertState,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Expr(
                                        Expr::Struct {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            IndiaOverSpeedWarningAlertState,
                                                        ),
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            brace_token: Brace,
                                            fields: [
                                                FieldValue {
                                                    attrs: [],
                                                    member: Member::Named(
                                                        Ident(
                                                            mem_prev_alert,
                                                        ),
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        VehiculeSpeedLevel,
                                                                    ),
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        Level0,
                                                                    ),
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                Comma,
                                                FieldValue {
                                                    attrs: [],
                                                    member: Member::Named(
                                                        Ident(
                                                            india_over_speed_no_alert_conditions_speed_condition,
                                                        ),
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            IndiaOverSpeedNoAlertConditionsSpeedConditionState,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            init,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                },
                                                Comma,
                                                FieldValue {
                                                    attrs: [],
                                                    member: Member::Named(
                                                        Ident(
                                                            india_over_speed_low_speed_conditions_speed_condition,
                                                        ),
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            IndiaOverSpeedLowSpeedConditionsSpeedConditionState,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            init,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                },
                                                Comma,
                                                FieldValue {
                                                    attrs: [],
                                                    member: Member::Named(
                                                        Ident(
                                                            india_over_speed_high_speed_conditions_speed_condition,
                                                        ),
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            IndiaOverSpeedHighSpeedConditionsSpeedConditionState,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            init,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                },
                                            ],
                                            dot2_token: None,
                                            rest: None,
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                        ImplItem::Fn {
                            attrs: [],
                            vis: Visibility::Public(
                                Pub,
                            ),
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    step,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    FnArg::Receiver(
                                        Receiver {
                                            attrs: [],
                                            reference: Some(
                                                (
                                                    And,
                                                    None,
                                                ),
                                            ),
                                            mutability: Some(
                                                Mut,
                                            ),
                                            self_token: SelfValue,
                                            colon_token: None,
                                            ty: Type::Reference {
                                                and_token: And,
                                                lifetime: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    Self,
                                                                ),
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                    ),
                                    Comma,
                                    FnArg::Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident(
                                                    input,
                                                ),
                                                subpat: None,
                                            },
                                            colon_token: Colon,
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                IndiaOverSpeedWarningAlertInput,
                                                            ),
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: ReturnType::Type(
                                    RArrow,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        VehiculeSpeedLevel,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                prev_alert,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        self,
                                                                    ),
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident(
                                                            mem_prev_alert,
                                                        ),
                                                    ),
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                no_alert,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            self,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident(
                                                                india_over_speed_no_alert_conditions_speed_condition,
                                                            ),
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident(
                                                        step,
                                                    ),
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Struct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            IndiaOverSpeedNoAlertConditionsSpeedConditionInput,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            brace_token: Brace,
                                                            fields: [
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            speed_kmh,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident(
                                                                                            input,
                                                                                        ),
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident(
                                                                                speed_kmh,
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                            dot2_token: None,
                                                            rest: None,
                                                        },
                                                    ],
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                low_alert,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            self,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident(
                                                                india_over_speed_low_speed_conditions_speed_condition,
                                                            ),
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident(
                                                        step,
                                                    ),
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Struct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            IndiaOverSpeedLowSpeedConditionsSpeedConditionInput,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            brace_token: Brace,
                                                            fields: [
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            speed_kmh,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident(
                                                                                            input,
                                                                                        ),
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident(
                                                                                speed_kmh,
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                                Comma,
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            prev_alert,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident(
                                                                                        prev_alert,
                                                                                    ),
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                Comma,
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            dt_ms,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident(
                                                                                            input,
                                                                                        ),
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident(
                                                                                dt_ms,
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                            dot2_token: None,
                                                            rest: None,
                                                        },
                                                    ],
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                high_alert,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            self,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident(
                                                                india_over_speed_high_speed_conditions_speed_condition,
                                                            ),
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident(
                                                        step,
                                                    ),
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Struct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            IndiaOverSpeedHighSpeedConditionsSpeedConditionInput,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            brace_token: Brace,
                                                            fields: [
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            speed_kmh,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident(
                                                                                            input,
                                                                                        ),
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident(
                                                                                speed_kmh,
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                                Comma,
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident(
                                                                            dt_ms,
                                                                        ),
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident(
                                                                                            input,
                                                                                        ),
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident(
                                                                                dt_ms,
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                            dot2_token: None,
                                                            rest: None,
                                                        },
                                                    ],
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                alert,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::Match {
                                                    attrs: [],
                                                    match_token: Match,
                                                    expr: Expr::Tuple {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        elems: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                high_alert,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                low_alert,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                no_alert,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    brace_token: Brace,
                                                    arms: [
                                                        Arm {
                                                            attrs: [],
                                                            pat: Pat::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Pat::Wild {
                                                                        attrs: [],
                                                                        underscore_token: Underscore,
                                                                    },
                                                                    Comma,
                                                                    Pat::Wild {
                                                                        attrs: [],
                                                                        underscore_token: Underscore,
                                                                    },
                                                                    Comma,
                                                                    Pat::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Bool {
                                                                            value: true,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            guard: None,
                                                            fat_arrow_token: FatArrow,
                                                            body: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                VehiculeSpeedLevel,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                Level0,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            comma: Some(
                                                                Comma,
                                                            ),
                                                        },
                                                        Arm {
                                                            attrs: [],
                                                            pat: Pat::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Pat::Wild {
                                                                        attrs: [],
                                                                        underscore_token: Underscore,
                                                                    },
                                                                    Comma,
                                                                    Pat::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Bool {
                                                                            value: true,
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Pat::Wild {
                                                                        attrs: [],
                                                                        underscore_token: Underscore,
                                                                    },
                                                                ],
                                                            },
                                                            guard: None,
                                                            fat_arrow_token: FatArrow,
                                                            body: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                VehiculeSpeedLevel,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                Level2,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            comma: Some(
                                                                Comma,
                                                            ),
                                                        },
                                                        Arm {
                                                            attrs: [],
                                                            pat: Pat::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Pat::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Bool {
                                                                            value: true,
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Pat::Wild {
                                                                        attrs: [],
                                                                        underscore_token: Underscore,
                                                                    },
                                                                    Comma,
                                                                    Pat::Wild {
                                                                        attrs: [],
                                                                        underscore_token: Underscore,
                                                                    },
                                                                ],
                                                            },
                                                            guard: None,
                                                            fat_arrow_token: FatArrow,
                                                            body: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                VehiculeSpeedLevel,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                Level3,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            comma: Some(
                                                                Comma,
                                                            ),
                                                        },
                                                        Arm {
                                                            attrs: [],
                                                            pat: Pat::Wild {
                                                                attrs: [],
                                                                underscore_token: Underscore,
                                                            },
                                                            guard: None,
                                                            fat_arrow_token: FatArrow,
                                                            body: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                prev_alert,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            comma: Some(
                                                                Comma,
                                                            ),
                                                        },
                                                    ],
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Expr(
                                        Expr::Assign {
                                            attrs: [],
                                            left: Expr::Field {
                                                attrs: [],
                                                base: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    self,
                                                                ),
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                member: Member::Named(
                                                    Ident(
                                                        mem_prev_alert,
                                                    ),
                                                ),
                                            },
                                            eq_token: Eq,
                                            right: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                alert,
                                                            ),
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        Some(
                                            Semi,
                                        ),
                                    ),
                                    Stmt::Expr(
                                        Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            alert,
                                                        ),
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                    ],
                },
            ],
        },
        "src/lib.rs": File {
            shebang: None,
            attrs: [],
            items: [
                Item::Mod {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    unsafety: None,
                    mod_token: Mod,
                    ident: Ident(
                        arabic_countires_over_speed_warning_alert,
                    ),
                    content: None,
                    semi: Some(
                        Semi,
                    ),
                },
                Item::Mod {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    unsafety: None,
                    mod_token: Mod,
                    ident: Ident(
                        during_result,
                    ),
                    content: None,
                    semi: Some(
                        Semi,
                    ),
                },
                Item::Mod {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    unsafety: None,
                    mod_token: Mod,
                    ident: Ident(
                        functions,
                    ),
                    content: None,
                    semi: Some(
                        Semi,
                    ),
                },
                Item::Mod {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    unsafety: None,
                    mod_token: Mod,
                    ident: Ident(
                        india_over_speed_condition_speed_condition_holds,
                    ),
                    content: None,
                    semi: Some(
                        Semi,
                    ),
                },
                Item::Mod {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    unsafety: None,
                    mod_token: Mod,
                    ident: Ident(
                        india_over_speed_high_speed_conditions_speed_condition,
                    ),
                    content: None,
                    semi: Some(
                        Semi,
                    ),
                },
                Item::Mod {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    unsafety: None,
                    mod_token: Mod,
                    ident: Ident(
                        india_over_speed_low_speed_conditions_speed_condition,
                    ),
                    content: None,
                    semi: Some(
                        Semi,
                    ),
                },
                Item::Mod {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    unsafety: None,
                    mod_token: Mod,
                    ident: Ident(
                        india_over_speed_no_alert_conditions_speed_condition,
                    ),
                    content: None,
                    semi: Some(
                        Semi,
                    ),
                },
                Item::Mod {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    unsafety: None,
                    mod_token: Mod,
                    ident: Ident(
                        india_over_speed_warning_alert,
                    ),
                    content: None,
                    semi: Some(
                        Semi,
                    ),
                },
                Item::Mod {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    unsafety: None,
                    mod_token: Mod,
                    ident: Ident(
                        typedefs,
                    ),
                    content: None,
                    semi: Some(
                        Semi,
                    ),
                },
                Item::Mod {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    unsafety: None,
                    mod_token: Mod,
                    ident: Ident(
                        vehicule_speed_odometer_alert,
                    ),
                    content: None,
                    semi: Some(
                        Semi,
                    ),
                },
            ],
        },
        "src/typedefs.rs": File {
            shebang: None,
            attrs: [],
            items: [
                Item::Enum {
                    attrs: [
                        Attribute {
                            pound_token: Pound,
                            style: AttrStyle::Outer,
                            bracket_token: Bracket,
                            meta: Meta::List {
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident(
                                                derive,
                                            ),
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                delimiter: MacroDelimiter::Paren(
                                    Paren,
                                ),
                                tokens: TokenStream [
                                    Ident {
                                        sym: Clone,
                                    },
                                    Punct {
                                        char: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Copy,
                                    },
                                    Punct {
                                        char: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Debug,
                                    },
                                    Punct {
                                        char: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: PartialEq,
                                    },
                                ],
                            },
                        },
                    ],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    enum_token: Enum,
                    ident: Ident(
                        Config,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    brace_token: Brace,
                    variants: [
                        Variant {
                            attrs: [],
                            ident: Ident(
                                NoWarning,
                            ),
                            fields: Fields::Unit,
                            discriminant: None,
                        },
                        Comma,
                        Variant {
                            attrs: [],
                            ident: Ident(
                                ArabicCountries,
                            ),
                            fields: Fields::Unit,
                            discriminant: None,
                        },
                        Comma,
                        Variant {
                            attrs: [],
                            ident: Ident(
                                India,
                            ),
                            fields: Fields::Unit,
                            discriminant: None,
                        },
                    ],
                },
                Item::Enum {
                    attrs: [
                        Attribute {
                            pound_token: Pound,
                            style: AttrStyle::Outer,
                            bracket_token: Bracket,
                            meta: Meta::List {
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident(
                                                derive,
                                            ),
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                delimiter: MacroDelimiter::Paren(
                                    Paren,
                                ),
                                tokens: TokenStream [
                                    Ident {
                                        sym: Clone,
                                    },
                                    Punct {
                                        char: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Copy,
                                    },
                                    Punct {
                                        char: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Debug,
                                    },
                                    Punct {
                                        char: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: PartialEq,
                                    },
                                ],
                            },
                        },
                    ],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    enum_token: Enum,
                    ident: Ident(
                        VehiculeSpeedLevel,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    brace_token: Brace,
                    variants: [
                        Variant {
                            attrs: [],
                            ident: Ident(
                                Level0,
                            ),
                            fields: Fields::Unit,
                            discriminant: None,
                        },
                        Comma,
                        Variant {
                            attrs: [],
                            ident: Ident(
                                Level1,
                            ),
                            fields: Fields::Unit,
                            discriminant: None,
                        },
                        Comma,
                        Variant {
                            attrs: [],
                            ident: Ident(
                                Level2,
                            ),
                            fields: Fields::Unit,
                            discriminant: None,
                        },
                        Comma,
                        Variant {
                            attrs: [],
                            ident: Ident(
                                Level3,
                            ),
                            fields: Fields::Unit,
                            discriminant: None,
                        },
                    ],
                },
            ],
        },
        "src/vehicule_speed_odometer_alert.rs": File {
            shebang: None,
            attrs: [],
            items: [
                Item::Use {
                    attrs: [],
                    vis: Visibility::Inherited,
                    use_token: Use,
                    leading_colon: None,
                    tree: UseTree::Path(
                        UsePath {
                            ident: Ident(
                                crate,
                            ),
                            colon2_token: PathSep,
                            tree: UseTree::Path(
                                UsePath {
                                    ident: Ident(
                                        typedefs,
                                    ),
                                    colon2_token: PathSep,
                                    tree: UseTree::Name(
                                        UseName {
                                            ident: Ident(
                                                Config,
                                            ),
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                    semi_token: Semi,
                },
                Item::Use {
                    attrs: [],
                    vis: Visibility::Inherited,
                    use_token: Use,
                    leading_colon: None,
                    tree: UseTree::Path(
                        UsePath {
                            ident: Ident(
                                crate,
                            ),
                            colon2_token: PathSep,
                            tree: UseTree::Path(
                                UsePath {
                                    ident: Ident(
                                        typedefs,
                                    ),
                                    colon2_token: PathSep,
                                    tree: UseTree::Name(
                                        UseName {
                                            ident: Ident(
                                                VehiculeSpeedLevel,
                                            ),
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                    semi_token: Semi,
                },
                Item::Use {
                    attrs: [],
                    vis: Visibility::Inherited,
                    use_token: Use,
                    leading_colon: None,
                    tree: UseTree::Path(
                        UsePath {
                            ident: Ident(
                                crate,
                            ),
                            colon2_token: PathSep,
                            tree: UseTree::Path(
                                UsePath {
                                    ident: Ident(
                                        arabic_countires_over_speed_warning_alert,
                                    ),
                                    colon2_token: PathSep,
                                    tree: UseTree::Glob(
                                        UseGlob {
                                            star_token: Star,
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                    semi_token: Semi,
                },
                Item::Use {
                    attrs: [],
                    vis: Visibility::Inherited,
                    use_token: Use,
                    leading_colon: None,
                    tree: UseTree::Path(
                        UsePath {
                            ident: Ident(
                                crate,
                            ),
                            colon2_token: PathSep,
                            tree: UseTree::Path(
                                UsePath {
                                    ident: Ident(
                                        india_over_speed_warning_alert,
                                    ),
                                    colon2_token: PathSep,
                                    tree: UseTree::Glob(
                                        UseGlob {
                                            star_token: Star,
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                    semi_token: Semi,
                },
                Item::Struct {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    struct_token: Struct,
                    ident: Ident(
                        VehiculeSpeedOdometerAlertInput,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    fields: Fields::Named {
                        brace_token: Brace,
                        named: [
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        vehicule_config,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    Config,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        speed_kmh,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    i64,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        dt_ms,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    i64,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                        ],
                    },
                    semi_token: None,
                },
                Item::Struct {
                    attrs: [],
                    vis: Visibility::Public(
                        Pub,
                    ),
                    struct_token: Struct,
                    ident: Ident(
                        VehiculeSpeedOdometerAlertState,
                    ),
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    fields: Fields::Named {
                        brace_token: Brace,
                        named: [
                            Field {
                                attrs: [],
                                vis: Visibility::Inherited,
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        arabic_countires_over_speed_warning_alert,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    ArabicCountiresOverSpeedWarningAlertState,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Visibility::Inherited,
                                mutability: FieldMutability::None,
                                ident: Some(
                                    Ident(
                                        india_over_speed_warning_alert,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    IndiaOverSpeedWarningAlertState,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            },
                        ],
                    },
                    semi_token: None,
                },
                Item::Impl {
                    attrs: [],
                    defaultness: None,
                    unsafety: None,
                    impl_token: Impl,
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    trait_: None,
                    self_ty: Type::Path {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        VehiculeSpeedOdometerAlertState,
                                    ),
                                    arguments: PathArguments::None,
                                },
                            ],
                        },
                    },
                    brace_token: Brace,
                    items: [
                        ImplItem::Fn {
                            attrs: [],
                            vis: Visibility::Public(
                                Pub,
                            ),
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    init,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [],
                                variadic: None,
                                output: ReturnType::Type(
                                    RArrow,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        VehiculeSpeedOdometerAlertState,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Expr(
                                        Expr::Struct {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            VehiculeSpeedOdometerAlertState,
                                                        ),
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            brace_token: Brace,
                                            fields: [
                                                FieldValue {
                                                    attrs: [],
                                                    member: Member::Named(
                                                        Ident(
                                                            arabic_countires_over_speed_warning_alert,
                                                        ),
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            ArabicCountiresOverSpeedWarningAlertState,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            init,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                },
                                                Comma,
                                                FieldValue {
                                                    attrs: [],
                                                    member: Member::Named(
                                                        Ident(
                                                            india_over_speed_warning_alert,
                                                        ),
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            IndiaOverSpeedWarningAlertState,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            init,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                },
                                            ],
                                            dot2_token: None,
                                            rest: None,
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                        ImplItem::Fn {
                            attrs: [],
                            vis: Visibility::Public(
                                Pub,
                            ),
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    step,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    FnArg::Receiver(
                                        Receiver {
                                            attrs: [],
                                            reference: Some(
                                                (
                                                    And,
                                                    None,
                                                ),
                                            ),
                                            mutability: Some(
                                                Mut,
                                            ),
                                            self_token: SelfValue,
                                            colon_token: None,
                                            ty: Type::Reference {
                                                and_token: And,
                                                lifetime: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    Self,
                                                                ),
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                    ),
                                    Comma,
                                    FnArg::Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident(
                                                    input,
                                                ),
                                                subpat: None,
                                            },
                                            colon_token: Colon,
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                VehiculeSpeedOdometerAlertInput,
                                                            ),
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: ReturnType::Type(
                                    RArrow,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        VehiculeSpeedLevel,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Local {
                                        attrs: [],
                                        let_token: Let,
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident(
                                                alert,
                                            ),
                                            subpat: None,
                                        },
                                        init: Some(
                                            LocalInit {
                                                eq_token: Eq,
                                                expr: Expr::Match {
                                                    attrs: [],
                                                    match_token: Match,
                                                    expr: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            input,
                                                                        ),
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident(
                                                                vehicule_config,
                                                            ),
                                                        ),
                                                    },
                                                    brace_token: Brace,
                                                    arms: [
                                                        Arm {
                                                            attrs: [],
                                                            pat: Pat::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                Config,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                NoWarning,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            guard: None,
                                                            fat_arrow_token: FatArrow,
                                                            body: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                VehiculeSpeedLevel,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                Level0,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            comma: Some(
                                                                Comma,
                                                            ),
                                                        },
                                                        Arm {
                                                            attrs: [],
                                                            pat: Pat::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                Config,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ArabicCountries,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            guard: None,
                                                            fat_arrow_token: FatArrow,
                                                            body: Expr::Block {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    x,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident(
                                                                                                                self,
                                                                                                            ),
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident(
                                                                                                    arabic_countires_over_speed_warning_alert,
                                                                                                ),
                                                                                            ),
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident(
                                                                                            step,
                                                                                        ),
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Struct {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident(
                                                                                                                ArabicCountiresOverSpeedWarningAlertInput,
                                                                                                            ),
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                brace_token: Brace,
                                                                                                fields: [
                                                                                                    FieldValue {
                                                                                                        attrs: [],
                                                                                                        member: Member::Named(
                                                                                                            Ident(
                                                                                                                speed_kmh,
                                                                                                            ),
                                                                                                        ),
                                                                                                        colon_token: Some(
                                                                                                            Colon,
                                                                                                        ),
                                                                                                        expr: Expr::Field {
                                                                                                            attrs: [],
                                                                                                            base: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident(
                                                                                                                                input,
                                                                                                                            ),
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            member: Member::Named(
                                                                                                                Ident(
                                                                                                                    speed_kmh,
                                                                                                                ),
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    Comma,
                                                                                                    FieldValue {
                                                                                                        attrs: [],
                                                                                                        member: Member::Named(
                                                                                                            Ident(
                                                                                                                dt_ms,
                                                                                                            ),
                                                                                                        ),
                                                                                                        colon_token: Some(
                                                                                                            Colon,
                                                                                                        ),
                                                                                                        expr: Expr::Field {
                                                                                                            attrs: [],
                                                                                                            base: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident(
                                                                                                                                input,
                                                                                                                            ),
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            member: Member::Named(
                                                                                                                Ident(
                                                                                                                    dt_ms,
                                                                                                                ),
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                                dot2_token: None,
                                                                                                rest: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Expr(
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                x,
                                                                                            ),
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            comma: Some(
                                                                Comma,
                                                            ),
                                                        },
                                                        Arm {
                                                            attrs: [],
                                                            pat: Pat::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                Config,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                India,
                                                                            ),
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            guard: None,
                                                            fat_arrow_token: FatArrow,
                                                            body: Expr::Block {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    x_1,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident(
                                                                                                                self,
                                                                                                            ),
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident(
                                                                                                    india_over_speed_warning_alert,
                                                                                                ),
                                                                                            ),
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident(
                                                                                            step,
                                                                                        ),
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Struct {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident(
                                                                                                                IndiaOverSpeedWarningAlertInput,
                                                                                                            ),
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                brace_token: Brace,
                                                                                                fields: [
                                                                                                    FieldValue {
                                                                                                        attrs: [],
                                                                                                        member: Member::Named(
                                                                                                            Ident(
                                                                                                                speed_kmh,
                                                                                                            ),
                                                                                                        ),
                                                                                                        colon_token: Some(
                                                                                                            Colon,
                                                                                                        ),
                                                                                                        expr: Expr::Field {
                                                                                                            attrs: [],
                                                                                                            base: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident(
                                                                                                                                input,
                                                                                                                            ),
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            member: Member::Named(
                                                                                                                Ident(
                                                                                                                    speed_kmh,
                                                                                                                ),
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                    Comma,
                                                                                                    FieldValue {
                                                                                                        attrs: [],
                                                                                                        member: Member::Named(
                                                                                                            Ident(
                                                                                                                dt_ms,
                                                                                                            ),
                                                                                                        ),
                                                                                                        colon_token: Some(
                                                                                                            Colon,
                                                                                                        ),
                                                                                                        expr: Expr::Field {
                                                                                                            attrs: [],
                                                                                                            base: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident(
                                                                                                                                input,
                                                                                                                            ),
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            member: Member::Named(
                                                                                                                Ident(
                                                                                                                    dt_ms,
                                                                                                                ),
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                                dot2_token: None,
                                                                                                rest: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Expr(
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                x_1,
                                                                                            ),
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            comma: Some(
                                                                Comma,
                                                            ),
                                                        },
                                                    ],
                                                },
                                                diverge: None,
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Stmt::Expr(
                                        Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            alert,
                                                        ),
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                    ],
                },
            ],
        },
    },
    crates: {},
}
