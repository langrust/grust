import classification;
import fusion;
import lidar_detection;
import object_tracking;
import radar_detection;

import distances from my_signals_file;
import point_cloud from my_signals_file;
import rgb_images from my_signals_file;
import moving_objects from my_signals_file;

let radar_detections = distances.map(
    |distances| radar_detection(distances).list_of_detections
);
let lidar_detections = point_cloud.map(
    |point_cloud| lidar_detection(point_cloud).list_of_detections
);
let regions_of_interest = point_cloud.map(
    |point_cloud| lidar_detection(point_cloud).regions_of_interest
);

let classification = join(rgb_images, regions_of_interest)
    .map(
        |(rgb_images, regions_of_interest)|
            classification(rgb_images, regions_of_interest).classification
    );

let fused = join(radar_detections, classification, lidar_detections)
    .map(
        |(radar_detections, classification, lidar_detections)|
            fusion(radar_detections, classification, lidar_detections).fused_information
    );

let object_motion = fused.map(
    |fused_information| object_tracking(fused_information).object_motion
);

object_motion.subscribe(|motion| moving_objects.next(motion));
