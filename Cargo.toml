[workspace]
resolver = "2"
exclude = ["creusot"]
members = [
    "grust",
    "examples/*",
    "grust_compiler_common",
    "grust_compiler_ir0",
    "grust_compiler_ir1",
    "grust_compiler_ir2",
    "grust_compiler_top",
    "json",
    "grust_proc",
    "grust_std",
    "grust_core",
]

[workspace.package]
# license-file = "LICENSE"
version = "1.4.0"
edition = "2021"
# publish = false

# Alignment to google requirements
[workspace.lints.rust]
unknown_lints = "allow"
deprecated = "allow"
# missing-docs = "deny"
unsafe_op_in_unsafe_fn = "deny"
warnings = "deny"

[workspace.lints.clippy]
# android denied rules
undocumented_unsafe_blocks = "deny"

# better cargo:
multiple_crate_versions = "warn"
negative_feature_names = "warn"
redundant_feature_names = "warn"
wildcard_dependencies = "warn"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[workspace.dependencies]
rustc-hash = "^1.1"
quote = "^1"
syn = { version = "^2", features = ["full", "extra-traits"] }
proc-macro2 = "^1"
lazy_static = "^1.4"
serde = { version = "^1.0", features = ["derive"] }
strum = { version = "0.21", features = ["derive"] }
petgraph = { version = "0.6.4", features = ["serde-1"] }
once_cell = "^1.19"
itertools = "^0.12"
rayon = "^1.10"
futures = "^0.3"
pin-project = "1.1.5"
rand = "0.8.5"
tokio = { version = "1.36.0", features = ["full"] }
serde_json = "1.0.82"
rustversion = "1.0"
tracing = { version = "0.1.41", features = ["attributes"] }

grust_compiler_common = { path = "./grust_compiler_common" }
grust_compiler_ir0 = { path = "./grust_compiler_ir0" }
grust_compiler_ir1 = { path = "./grust_compiler_ir1" }
grust_compiler_ir2 = { path = "./grust_compiler_ir2" }
grust_compiler_top = { path = "./grust_compiler_top" }

grust = { path = "./grust" }
grust_proc = { path = "./grust_proc" }
grust_std = { path = "./grust_std" }
grust_core = { path = "./grust_core" }

json = { path = "./json" }
creusot-contracts = { path = "./creusot/creusot-contracts" }

[profile.release]
panic = 'abort'

[profile.dev]
panic = 'abort'
